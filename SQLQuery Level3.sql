-- 1. Create a risk score using multiple factors 
-- (OverTime, JobSatisfaction < 3, YearsAtCompany < 2, etc.).

SELECT EMPLOYEENUMBER,
       JOBSATISFACTION, 
	   OVERTIME, 
	   YEARSATCOMPANY, 
	   ENVIRONMENTSATISFACTION, 
	   WORKLIFEBALANCE,
(
CASE WHEN JOBSATISFACTION < 3 THEN 1 ELSE 0 END +
CASE WHEN OVERTIME = 1 THEN 1 ELSE 0 END +
CASE WHEN YEARSATCOMPANY < 2 THEN 1 ELSE 0 END +
CASE WHEN ENVIRONMENTSATISFACTION < 3 THEN 1 ELSE 0 END +
CASE WHEN WORKLIFEBALANCE < 3 THEN 1 ELSE 0 END
) AS RISKFACTOR
FROM EMP_ATTRITION
ORDER BY RISKFACTOR DESC

-- 2. Use WINDOW FUNCTIONS to rank departments by attrition rate.

WITH DeptAttrition AS (
    SELECT 
        DEPARTMENT,
        COUNT(*) AS TOTAL_EMPLOYEES,
        SUM(CASE WHEN ATTRITION = 1 THEN 1 ELSE 0 END) AS EMPLOYEES_LEFT,
        CONCAT(FORMAT(ROUND(100.0 * SUM(CASE WHEN ATTRITION = 1 THEN 1 ELSE 0 END) / COUNT(*), 2), '0.##'), '%') AS ATTRITION_RATE
    FROM EMP_ATTRITION
    GROUP BY Department
)

SELECT 
    DEPARTMENT,
    TOTAL_EMPLOYEES,
    EMPLOYEES_LEFT,
    ATTRITION_RATE,
    RANK() OVER (ORDER BY Attrition_Rate DESC) AS ATTRITION_RANK
FROM DeptAttrition;

-- 3. Pivot the dataset to show average scores 
-- for satisfaction, balance, income, etc. per JobRole.

SELECT JOBROLE, 

FORMAT(ROUND((AVG(JOBSATISFACTION)), 2), '0.##') AS AVG_JOB_SATISFACTION
FROM EMP_ATTRITION
GROUP BY JOBROLE


SELECT 
    JOBROLE,
    ROUND(AVG(JOBSATISFACTION), 2) AS AVG_JOBSATISFACTION,
    ROUND(AVG(ENVIRONMENTSATISFACTION), 2) AS AVG_ENVSATISFACTION,
    ROUND(AVG(WORKLIFEBALANCE), 2) AS AVG_WORKLIFEBALANCE,
    ROUND(AVG(MONTHLYINCOME), 2) AS AVG_INCOME,
    ROUND(AVG(OVERTIME_SCORE), 2) AS AVG_OVERTIMESCORE
FROM (
    SELECT *,
           CASE WHEN OVERTIME = 1 THEN 1 ELSE 0 END AS OVERTIME_SCORE
    FROM EMP_ATTRITION
) AS SUB
GROUP BY JOBROLE
ORDER BY AVG_JOBSATISFACTION DESC;

-- 4. Find employee segments with the highest attrition risk using grouped attributes 
-- (e.g., young + low income + long distance).

SELECT 
    CASE 
        WHEN AGE < 30 THEN 'Young'
        WHEN AGE BETWEEN 30 AND 45 THEN 'Mid-Age'
        ELSE 'Senior'
    END AS AGE_GROUP,

    CASE 
        WHEN MONTHLYINCOME < 3000 THEN 'Low Income'
        WHEN MONTHLYINCOME BETWEEN 3000 AND 7000 THEN 'Mid Income'
        ELSE 'High Income'
    END AS INCOME_GROUP,

    CASE 
        WHEN DISTANCEFROMHOME <= 10 THEN 'Near'
        ELSE 'Far'
    END AS COMMUTE_DISTANCE,

    COUNT(*) AS TOTAL_EMPLOYEES,
    SUM(CASE WHEN ATTRITION = 1 THEN 1 ELSE 0 END) AS EMPLOYEES_LEFT,
    CAST(
        100.0 * SUM(CASE WHEN ATTRITION = 1 THEN 1 ELSE 0 END) / COUNT(*) AS DECIMAL(5,2)
    ) AS 'ATTRITION_RATE (%)'

FROM EMP_ATTRITION
GROUP BY 
    CASE 
        WHEN Age < 30 THEN 'Young'
        WHEN Age BETWEEN 30 AND 45 THEN 'Mid-Age'
        ELSE 'Senior'
    END,
    CASE 
        WHEN MonthlyIncome < 3000 THEN 'Low Income'
        WHEN MonthlyIncome BETWEEN 3000 AND 7000 THEN 'Mid Income'
        ELSE 'High Income'
    END,
    CASE 
        WHEN DISTANCEFROMHOME <= 10 THEN 'Near'
        ELSE 'Far'
    END
ORDER BY 'ATTRITION_RATE (%)' DESC;